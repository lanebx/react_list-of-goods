{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","props","className","map","product","goodsFromServer","App","state","goods","showList","value","reverse","setState","sortAlphabetically","sort","sortByLength","a","b","length","this","filter","item","type","onClick","onChange","e","Number","currentTarget","_item","i","disabled","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8QAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,qBAAKC,UAAU,gBAAf,SACGD,EAAME,KAAI,SAACC,GAAD,OACT,qBAAKF,UAAU,gBAAf,SACGE,GADiCA,SCNtCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,MAAM,GAAD,OAAMH,GACXI,UAAU,EACVC,MAAO,G,EAGTC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAmB,CAC/BC,MAAO,YAAID,EAAMC,OAAOG,e,EAI5BE,mBAAqB,WACnB,EAAKD,UAAS,SAACL,GAAD,MAAmB,CAC/BC,MAAO,YAAID,EAAMC,OAAOM,Y,EAI5BC,aAAe,WACb,EAAKH,UAAS,SAACL,GAAD,MAAmB,CAC/BC,MAAOD,EAAMC,MAAMM,MAAK,SAACE,EAAWC,GAClC,OAAOD,EAAEE,OAASD,EAAEC,e,4CAK1B,WAAU,IAAD,OACP,EAEIC,KAAKZ,MADPC,EADF,EACEA,MAAOC,EADT,EACSA,SAGT,OACE,qBAAKP,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,qBAAKA,UAAU,kBAAf,SACIO,EAaE,cAAC,EAAD,CACER,MAAOO,EAAMY,QAAO,SAACC,GAAD,OAAUA,EAAKH,QAAU,EAAKX,MAAMG,WAZ1D,wBACER,UAAU,sBACVoB,KAAK,SACLC,QAAS,WACP,EAAKX,UAAS,SAACL,GAAD,MAAmB,CAAEE,UAAWF,EAAME,cAJxD,qBAiBN,qBAAKP,UAAU,SAAf,SACE,wBACEQ,MAAOS,KAAKZ,MAAMG,MAClBc,SAAU,SAACC,GAAD,OAAO,EAAKb,SAAS,CAAEF,MAAOgB,OAAOD,EAAEE,cAAcjB,UAFjE,SAIGF,EAAML,KAAI,SAACyB,EAAOC,GACjB,OACE,wBACEnB,MAAOmB,EAAI,EADb,SAGGA,EAAI,WAOf,sBAAK3B,UAAU,mBAAf,UACE,wBACEA,UAAU,SACVoB,KAAK,SACLQ,UAAWrB,EACXc,QAAS,WACP,EAAKZ,WALT,qBAWA,wBACET,UAAU,mCACVoB,KAAK,SACLQ,UAAWrB,EACXc,QAAS,WACP,EAAKV,sBALT,iCAWA,wBACEX,UAAU,6BACVoB,KAAK,SACLQ,UAAWrB,EACXc,QAAS,WACP,EAAKR,gBALT,4BAWA,wBACEb,UAAU,sBACVoB,KAAK,SACLQ,UAAWrB,EACXc,QAAS,WACP,EAAKX,SAAS,CACZJ,MAAM,GAAD,OAAMH,GACXK,MAAO,KAPb,+B,GA3GMqB,IAAMC,WA+HT1B,ICpJf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.134945b7.chunk.js","sourcesContent":["import './GoodsList.scss';\nimport React from 'react';\n\ninterface Props {\n  props: string[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ props }) => {\n  return (\n    <div className=\"product__list\">\n      {props.map((product: string) => (\n        <div className=\"product__item\" key={product}>\n          {product}\n        </div>\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[];\n  showList: boolean;\n  value: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [...goodsFromServer],\n    showList: false,\n    value: 1,\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState((state: State) => ({\n      goods: [...state.goods].sort(),\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState((state: State) => ({\n      goods: state.goods.sort((a: string, b: string) => {\n        return a.length - b.length;\n      }),\n    }));\n  };\n\n  render() {\n    const {\n      goods, showList,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"card\">\n          <h1 className=\"card__title\">Goods</h1>\n          <div className=\"list__conteiner\">\n            {!showList\n              ? (\n                <button\n                  className=\"button button-start\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.setState((state: State) => ({ showList: !state.showList }));\n                  }}\n                >\n                  Start\n                </button>\n              )\n              : (\n                <GoodsList\n                  props={goods.filter((item) => item.length >= this.state.value)}\n                />\n              )}\n          </div>\n\n          <div className=\"select\">\n            <select\n              value={this.state.value}\n              onChange={(e) => this.setState({ value: Number(e.currentTarget.value) })}\n            >\n              {goods.map((_item, i) => {\n                return (\n                  <option\n                    value={i + 1}\n                  >\n                    {i + 1}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"button-container\">\n            <button\n              className=\"button\"\n              type=\"button\"\n              disabled={!showList}\n              onClick={() => {\n                this.reverse();\n              }}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"button button-sortAlphabetically\"\n              type=\"button\"\n              disabled={!showList}\n              onClick={() => {\n                this.sortAlphabetically();\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"button button-sortByLength\"\n              type=\"button\"\n              disabled={!showList}\n              onClick={() => {\n                this.sortByLength();\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"button button-reset\"\n              type=\"button\"\n              disabled={!showList}\n              onClick={() => {\n                this.setState({\n                  goods: [...goodsFromServer],\n                  value: 1,\n                });\n              }}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}